apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: em
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      namespace: em
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-root-username
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-root-password
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: mongo-configmap
                  key: database-name
            - name: ME_CONFIG_MONGODB_URL
              valueFrom:
                configMapKeyRef:
                  name: mongo-configmap
                  key: database-url
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
  namespace: em
spec:
  selector:
    app: mongo-express
#  type: NodePort
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
#      nodePort: 30100
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongo-express-ingress
  namespace: em
spec:
  ingressClassName: "nginx"
  rules:
    - host: kubernetes.docker.internal # or anything else, just need to add it into host file
    - http:  # incoming request forwarding to internal service
        paths:
          - path: /
            backend:
              service:
                name: mongo-express-service
                port:
                  number: 8081
            pathType: Prefix
